{"ast":null,"code":"import _slicedToArray from \"/home/hardik/templetReact/adzone-temp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hardik/templetReact/adzone-temp/src/layouts/Admin.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect, Link } from \"react-router-dom\"; // creates a beautiful scrollbar\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\nimport routes from \"routes.js\";\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\nimport bgImage from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/reactlogo.png\";\nimport AddProduct from \"views/UserProfile/AddProduct\";\nimport EditProfile from 'components/EditProfile';\nimport UserForm from \"views/UserProfile/UserForm\";\nvar ps;\nvar switchRoutes = React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/publicity/profile/edit\",\n  component: UserForm,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), routes.map(function (prop, key) {\n  if (prop.layout === \"/publicity\") {\n    return React.createElement(Route, {\n      path: \"/publicity\" + prop.path,\n      component: prop.component,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n}), React.createElement(Redirect, {\n  from: \"/publicity\",\n  to: \"/publicity/dashboard\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}));\nvar useStyles = makeStyles(styles);\nexport default function Admin(_ref) {\n  var rest = Object.assign({}, _ref);\n  // styles\n  var classes = useStyles(); // ref to help us initialize PerfectScrollbar on windows devices\n\n  var mainPanel = React.createRef(); // states and functions\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      ip = _React$useState2[0],\n      setIp = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      port = _React$useState4[0],\n      setPort = _React$useState4[1];\n\n  var _React$useState5 = React.useState(bgImage),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      image = _React$useState6[0],\n      setImage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"blue\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      color = _React$useState8[0],\n      setColor = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"dropdown show\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      fixedClasses = _React$useState10[0],\n      setFixedClasses = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      mobileOpen = _React$useState12[0],\n      setMobileOpen = _React$useState12[1];\n\n  var handleImageClick = function handleImageClick(image) {\n    setImage(image);\n  };\n\n  var handleColorClick = function handleColorClick(color) {\n    setColor(color);\n  };\n\n  var handleFixedClick = function handleFixedClick() {\n    if (fixedClasses === \"dropdown\") {\n      setFixedClasses(\"dropdown show\");\n    } else {\n      setFixedClasses(\"dropdown\");\n    }\n  };\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  };\n\n  var getRoute = function getRoute() {\n    return window.location.pathname !== \"/admin/maps\";\n  };\n\n  var resizeFunction = function resizeFunction() {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  }; // initialize and destroy the PerfectScrollbar plugin\n\n\n  React.useEffect(function () {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n\n    window.addEventListener(\"resize\", resizeFunction); // Specify how to clean up after this effect:\n\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Sidebar, Object.assign({\n    routes: routes,\n    logoText: \"adzone\",\n    logo: logo,\n    image: image,\n    handleDrawerToggle: handleDrawerToggle,\n    open: mobileOpen,\n    color: color\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.mainPanel,\n    ref: mainPanel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Navbar, Object.assign({\n    routes: routes,\n    handleDrawerToggle: handleDrawerToggle\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), getRoute() ? React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, switchRoutes)) : React.createElement(\"div\", {\n    className: classes.map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, switchRoutes), getRoute() ? React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }) : null, React.createElement(FixedPlugin, {\n    handleImageClick: handleImageClick,\n    handleColorClick: handleColorClick,\n    bgColor: color,\n    bgImage: image,\n    handleFixedClick: handleFixedClick,\n    fixedClasses: fixedClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/hardik/templetReact/adzone-temp/src/layouts/Admin.js"],"names":["React","Switch","Route","Redirect","Link","PerfectScrollbar","makeStyles","Navbar","Footer","Sidebar","FixedPlugin","routes","styles","bgImage","logo","AddProduct","EditProfile","UserForm","ps","switchRoutes","map","prop","key","layout","path","component","useStyles","Admin","rest","classes","mainPanel","createRef","useState","ip","setIp","port","setPort","image","setImage","color","setColor","fixedClasses","setFixedClasses","mobileOpen","setMobileOpen","handleImageClick","handleColorClick","handleFixedClick","handleDrawerToggle","getRoute","window","location","pathname","resizeFunction","innerWidth","useEffect","navigator","platform","indexOf","current","suppressScrollX","suppressScrollY","document","body","style","overflow","addEventListener","cleanup","destroy","removeEventListener","wrapper","content","container"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect, Link } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport bgImage from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/reactlogo.png\";\nimport AddProduct from \"views/UserProfile/AddProduct\";\nimport EditProfile from 'components/EditProfile';\nimport UserForm from \"views/UserProfile/UserForm\";\n\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {/* <Route exact path=\"/publicity/profile/setting\" component={Setting}/> */}\n    <Route exact path=\"/publicity/profile/edit\" component={UserForm} />\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/publicity\") {\n        return (\n          <Route\n            path={\"/publicity\" + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n\n    })}\n    <Redirect from=\"/publicity\" to=\"/publicity/dashboard\" />\n  </Switch>\n);\n\n\nconst useStyles = makeStyles(styles);\n\nexport default function Admin({ ...rest }) {\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  // states and functions\n  const [ip, setIp] = React.useState();\n  const [port, setPort] = React.useState();\n  const [image, setImage] = React.useState(bgImage);\n  const [color, setColor] = React.useState(\"blue\");\n  const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const handleImageClick = image => {\n    setImage(image);\n  };\n  const handleColorClick = color => {\n    setColor(color);\n  };\n  const handleFixedClick = () => {\n    if (fixedClasses === \"dropdown\") {\n      setFixedClasses(\"dropdown show\");\n    } else {\n      setFixedClasses(\"dropdown\");\n    }\n  };\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin/maps\";\n  };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return (\n    <div className={classes.wrapper}>\n      <Sidebar\n        routes={routes}\n        logoText={\"adzone\"}\n        logo={logo}\n        image={image}\n        handleDrawerToggle={handleDrawerToggle}\n        open={mobileOpen}\n        color={color}\n        {...rest}\n      />\n      <div className={classes.mainPanel} ref={mainPanel}>\n        <Navbar\n          routes={routes}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n        {getRoute() ? (\n          <div className={classes.content}>\n            <div className={classes.container}>{switchRoutes}</div>\n          </div>\n        ) : (\n            <div className={classes.map}>{switchRoutes}</div>\n          )\n        }\n        {getRoute() ? <Footer /> : null}\n        <FixedPlugin\n          handleImageClick={handleImageClick}\n          handleColorClick={handleColorClick}\n          bgColor={color}\n          bgImage={image}\n          handleFixedClick={handleFixedClick}\n          fixedClasses={fixedClasses}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}