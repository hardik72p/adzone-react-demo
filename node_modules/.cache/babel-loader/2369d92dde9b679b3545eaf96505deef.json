{"ast":null,"code":"import _defineProperty from \"/home/hardik/templetReact/adzone-temp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hardik/templetReact/adzone-temp/src/components/Sidebar/Sidebar.js\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function Sidebar(props) {\n  var classes = useStyles(); // verifies if routeName is the one active (in browser input)\n\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n\n  var color = props.color,\n      logo = props.logo,\n      image = props.image,\n      logoText = props.logoText,\n      routes = props.routes; // var links = (\n  //   <List className={classes.list}>\n  //     {routes.map((prop, key) => {\n  //       var activePro = \" \";\n  //       var listItemClasses;\n  //       if (prop.path === \"/upgrade-to-pro\") {\n  //         activePro = classes.activePro + \" \";\n  //         listItemClasses = classNames({\n  //           [\" \" + classes[color]]: true\n  //         });\n  //       } else {\n  //         listItemClasses = classNames({\n  //           [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n  //         });\n  //       }\n  //       const whiteFontClasses = classNames({\n  //         [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n  //       });\n  //       return (\n  //         <NavLink\n  //           to={prop.layout + prop.path}\n  //           className={activePro + classes.item}\n  //           activeClassName=\"active\"\n  //           key={key}\n  //         >\n  //           <ListItem button className={classes.itemLink + listItemClasses}>\n  //             {typeof prop.icon === \"string\" ? (\n  //               <Icon\n  //                 className={classNames(classes.itemIcon, whiteFontClasses, {\n  //                   [classes.itemIconRTL]: props.rtlActive\n  //                 })}\n  //               >\n  //                 {prop.icon}\n  //               </Icon>\n  //             ) : (\n  //               <prop.icon\n  //                 className={classNames(classes.itemIcon, whiteFontClasses, {\n  //                   [classes.itemIconRTL]: props.rtlActive\n  //                 })}\n  //               />\n  //             )}\n  //             <ListItemText\n  //               primary={props.rtlActive ? prop.rtlName : prop.name}\n  //               className={classNames(classes.itemText, whiteFontClasses, {\n  //                 [classes.itemTextRTL]: props.rtlActive\n  //               })}\n  //               disableTypography={true}\n  //             />\n  //           </ListItem>\n  //         </NavLink>\n  //       );\n  //     })}\n  //   </List>\n  // );\n  // var brand = (\n  //   <div className={classes.logo}>\n  //     <a\n  //       href=\"https://www.creative-tim.com?ref=mdr-sidebar\"\n  //       className={classNames(classes.logoLink, {\n  //         [classes.logoLinkRTL]: props.rtlActive\n  //       })}\n  //       target=\"_blank\"\n  //     >\n  //       <div className={classes.logoImage}>\n  //         <img src={logo} alt=\"logo\" className={classes.img} />\n  //       </div>\n  //       {logoText}\n  //     </a>\n  //   </div>\n  // );\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: props.rtlActive ? \"left\" : \"right\",\n    open: props.open,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    onClose: props.handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, props.rtlActive ? React.createElement(RTLNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }) : React.createElement(AdminNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }) : null)), React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }) : null)));\n}\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};","map":{"version":3,"sources":["/home/hardik/templetReact/adzone-temp/src/components/Sidebar/Sidebar.js"],"names":["React","classNames","PropTypes","NavLink","makeStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","AdminNavbarLinks","RTLNavbarLinks","styles","useStyles","Sidebar","props","classes","activeRoute","routeName","window","location","href","indexOf","color","logo","image","logoText","routes","rtlActive","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","brand","sidebarWrapper","links","undefined","background","backgroundImage","propTypes","bool","func","bgColor","oneOf","string","arrayOf","object"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n  const { color, logo, image, logoText, routes } = props;\n  // var links = (\n  //   <List className={classes.list}>\n  //     {routes.map((prop, key) => {\n  //       var activePro = \" \";\n  //       var listItemClasses;\n  //       if (prop.path === \"/upgrade-to-pro\") {\n  //         activePro = classes.activePro + \" \";\n  //         listItemClasses = classNames({\n  //           [\" \" + classes[color]]: true\n  //         });\n  //       } else {\n  //         listItemClasses = classNames({\n  //           [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n  //         });\n  //       }\n  //       const whiteFontClasses = classNames({\n  //         [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n  //       });\n  //       return (\n  //         <NavLink\n  //           to={prop.layout + prop.path}\n  //           className={activePro + classes.item}\n  //           activeClassName=\"active\"\n  //           key={key}\n  //         >\n  //           <ListItem button className={classes.itemLink + listItemClasses}>\n  //             {typeof prop.icon === \"string\" ? (\n  //               <Icon\n  //                 className={classNames(classes.itemIcon, whiteFontClasses, {\n  //                   [classes.itemIconRTL]: props.rtlActive\n  //                 })}\n  //               >\n  //                 {prop.icon}\n  //               </Icon>\n  //             ) : (\n  //               <prop.icon\n  //                 className={classNames(classes.itemIcon, whiteFontClasses, {\n  //                   [classes.itemIconRTL]: props.rtlActive\n  //                 })}\n  //               />\n  //             )}\n  //             <ListItemText\n  //               primary={props.rtlActive ? prop.rtlName : prop.name}\n  //               className={classNames(classes.itemText, whiteFontClasses, {\n  //                 [classes.itemTextRTL]: props.rtlActive\n  //               })}\n  //               disableTypography={true}\n  //             />\n  //           </ListItem>\n  //         </NavLink>\n  //       );\n  //     })}\n  //   </List>\n  // );\n  // var brand = (\n  //   <div className={classes.logo}>\n  //     <a\n  //       href=\"https://www.creative-tim.com?ref=mdr-sidebar\"\n  //       className={classNames(classes.logoLink, {\n  //         [classes.logoLinkRTL]: props.rtlActive\n  //       })}\n  //       target=\"_blank\"\n  //     >\n  //       <div className={classes.logoImage}>\n  //         <img src={logo} alt=\"logo\" className={classes.img} />\n  //       </div>\n  //       {logoText}\n  //     </a>\n  //   </div>\n  // );\n  return (\n    <div>\n      {/* //-----------------------for mobile View------------------------------------- */}\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n\n      {/* //-----------------------for web View------------------------------------- */}\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}