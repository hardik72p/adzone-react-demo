{"ast":null,"code":"import _defineProperty from \"/home/hardik/templetReact/adzone-temp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/hardik/templetReact/adzone-temp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hardik/templetReact/adzone-temp/src/components/Navbars/AdminNavbarLinks.js\";\nimport React from \"react\";\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\"; // @material-ui/icons\n\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\"; // core components\n\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function AdminNavbarLinks(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openNotification = _React$useState2[0],\n      setOpenNotification = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openProfile = _React$useState4[0],\n      setOpenProfile = _React$useState4[1];\n\n  var handleClickNotification = function handleClickNotification(event) {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n\n  var handleCloseNotification = function handleCloseNotification() {\n    setOpenNotification(null);\n  };\n\n  var handleClickProfile = function handleClickProfile(event) {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n\n  var handleCloseProfile = function handleCloseProfile() {\n    setOpenProfile(null);\n  };\n\n  var handleLogout = function handleLogout() {\n    handleCloseProfile();\n    localStorage.removeItem(\"id\");\n\n    _this.props.history.push('/login');\n  };\n\n  var handleChangeSetting = function handleChangeSetting() {\n    handleCloseProfile();\n    props.history.push('/publicity/profile/setting');\n  };\n\n  var handleChangeProfile = function handleChangeProfile() {\n    handleCloseProfile();\n    props.history.push('/publicity/profile/edit');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: window.innerWidth > 959 ? \"transparent\" : \"white\",\n    justIcon: window.innerWidth > 959,\n    simple: !(window.innerWidth > 959),\n    \"aria-label\": \"Dashboard\",\n    className: classes.buttonLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Dashboard, {\n    className: classes.icons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: classes.linkText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Dashboard\"))), React.createElement(\"div\", {\n    className: classes.manager,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: window.innerWidth > 959 ? \"transparent\" : \"white\",\n    justIcon: window.innerWidth > 959,\n    simple: !(window.innerWidth > 959),\n    \"aria-owns\": openNotification ? \"notification-menu-list-grow\" : null,\n    \"aria-haspopup\": \"true\",\n    onClick: handleClickNotification,\n    className: classes.buttonLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Notifications, {\n    className: classes.icons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.notifications,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"5\"), React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    onClick: handleCloseNotification,\n    className: classes.linkText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Notification\"))), React.createElement(Poppers, {\n    open: Boolean(openNotification),\n    anchorEl: openNotification,\n    transition: true,\n    disablePortal: true,\n    className: classNames(_defineProperty({}, classes.popperClose, !openNotification)) + \" \" + classes.popperNav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, function (_ref) {\n    var TransitionProps = _ref.TransitionProps,\n        placement = _ref.placement;\n    return React.createElement(Grow, Object.assign({}, TransitionProps, {\n      id: \"notification-menu-list-grow\",\n      style: {\n        transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: handleCloseNotification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      role: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onClick: handleCloseNotification,\n      className: classes.dropdownItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Mike John responded to your email\"), React.createElement(MenuItem, {\n      onClick: handleCloseNotification,\n      className: classes.dropdownItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"You have 5 new tasks\"), React.createElement(MenuItem, {\n      onClick: handleCloseNotification,\n      className: classes.dropdownItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"You\", \"'\", \"re now friend with Andrew\"), React.createElement(MenuItem, {\n      onClick: handleCloseNotification,\n      className: classes.dropdownItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Another Notification\"), React.createElement(MenuItem, {\n      onClick: handleCloseNotification,\n      className: classes.dropdownItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Another One\")))));\n  })), React.createElement(\"div\", {\n    className: classes.manager,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: window.innerWidth > 959 ? \"transparent\" : \"white\",\n    justIcon: window.innerWidth > 959,\n    simple: !(window.innerWidth > 959),\n    \"aria-owns\": openProfile ? \"profile-menu-list-grow\" : null,\n    \"aria-haspopup\": \"true\",\n    onClick: handleClickProfile,\n    className: classes.buttonLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Person, {\n    className: classes.icons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: classes.linkText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Profile\"))), React.createElement(Poppers, {\n    open: Boolean(openProfile),\n    anchorEl: openProfile,\n    transition: true,\n    disablePortal: true,\n    className: classNames(_defineProperty({}, classes.popperClose, !openProfile)) + \" \" + classes.popperNav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, function (_ref2) {\n    var TransitionProps = _ref2.TransitionProps,\n        placement = _ref2.placement;\n    return React.createElement(Grow, Object.assign({}, TransitionProps, {\n      id: \"profile-menu-list-grow\",\n      style: {\n        transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: handleCloseProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      role: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onClick: handleChangeProfile,\n      className: classes.dropdownItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Profile\"), React.createElement(MenuItem, {\n      onClick: handleChangeSetting,\n      className: classes.dropdownItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Settings\"), React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(MenuItem, {\n      onClick: handleLogout,\n      className: classes.dropdownItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Logout\")))));\n  })));\n}","map":{"version":3,"sources":["/home/hardik/templetReact/adzone-temp/src/components/Navbars/AdminNavbarLinks.js"],"names":["React","classNames","makeStyles","MenuItem","MenuList","Grow","Paper","ClickAwayListener","Hidden","Poppers","Divider","Person","Notifications","Dashboard","Search","CustomInput","Button","styles","useStyles","AdminNavbarLinks","props","classes","useState","openNotification","setOpenNotification","openProfile","setOpenProfile","handleClickNotification","event","contains","target","currentTarget","handleCloseNotification","handleClickProfile","handleCloseProfile","handleLogout","localStorage","removeItem","history","push","handleChangeSetting","handleChangeProfile","window","innerWidth","buttonLink","icons","linkText","manager","notifications","Boolean","popperClose","popperNav","TransitionProps","placement","transformOrigin","dropdownItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\";\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminNavbarLinks(props) {\n  const classes = useStyles();\n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n\n  const handleClickNotification = event => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n\n  const handleClickProfile = event => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n\n  const handleCloseProfile = () => {\n    setOpenProfile(null);\n  };\n\n  const handleLogout=()=>{\n    handleCloseProfile();\n    localStorage.removeItem(\"id\");\n\t\tthis.props.history.push('/login');\n  }\n\n  const handleChangeSetting=()=>{\n    handleCloseProfile();\n    props.history.push('/publicity/profile/setting');\n  }\n\n  const handleChangeProfile=()=>{\n    handleCloseProfile();\n    props.history.push('/publicity/profile/edit');\n  }\n\n\n\n  return (\n    <div>\n      {/* <div className={classes.searchWrapper}>\n        <CustomInput\n          formControlProps={{\n            className: classes.margin + \" \" + classes.search\n          }}\n          inputProps={{\n            placeholder: \"Search\",\n            inputProps: {\n              \"aria-label\": \"Search\"\n            }\n          }}\n        />\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\n          <Search />\n        </Button>\n      </div> */}\n      <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-label=\"Dashboard\"\n        className={classes.buttonLink}\n      >\n        <Dashboard className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>Dashboard</p>\n        </Hidden>\n      </Button>\n      <div className={classes.manager}>\n\n\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickNotification}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          <span className={classes.notifications}>5</span>\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleCloseNotification} className={classes.linkText}>\n              Notification\n            </p>\n          </Hidden>\n        </Button>\n        \n        <Poppers\n          open={Boolean(openNotification)}\n          anchorEl={openNotification}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openNotification }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"notification-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseNotification}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Mike John responded to your email\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      You have 5 new tasks\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      You{\"'\"}re now friend with Andrew\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Another Notification\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Another One\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Profile</p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseProfile}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleChangeProfile}\n                      className={classes.dropdownItem}\n                    >\n                      Profile\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleChangeSetting}\n                      className={classes.dropdownItem}\n                    >\n                      Settings\n                    </MenuItem>\n                    <Divider light />\n                    <MenuItem\n                      onClick={handleLogout}\n                      className={classes.dropdownItem}\n                    >\n                      Logout\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}