{"ast":null,"code":"import _classCallCheck from \"/home/hardik/templetReact/adzone-temp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hardik/templetReact/adzone-temp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hardik/templetReact/adzone-temp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hardik/templetReact/adzone-temp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hardik/templetReact/adzone-temp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hardik/templetReact/adzone-temp/src/components/Email.js\";\nimport React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport 'scss/my-scss.scss';\nimport autosize from 'autosize';\n\nvar Email =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Email, _Component);\n\n  function Email(props) {\n    var _this;\n\n    _classCallCheck(this, Email);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Email).call(this, props));\n    _this.state = {\n      textareaHeight: 38\n    };\n    return _this;\n  }\n\n  _createClass(Email, [{\n    key: \"handleKeyUp\",\n    value: function handleKeyUp(evt) {\n      // Max: 75px Min: 38px\n      var newHeight = Math.max(Math.min(evt.target.scrollHeight + 2, 75), 38);\n\n      if (newHeight !== this.state.textareaHeight) {\n        this.setState({\n          textareaHeight: newHeight\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.textarea.focus();\n      autosize(this.textarea);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var description = {\n        border: 'solid'\n      };\n      return React.createElement(React.Fragment, null, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"File\"), React.createElement(Input, {\n        type: \"file\",\n        name: \"file\",\n        id: \"exampleFile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"text\",\n        className: \"exampleText\" // style={description}\n        ,\n        onKeyUp: this.handleKeyUp.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Email;\n}(Component);\n\nexport default Email;","map":{"version":3,"sources":["/home/hardik/templetReact/adzone-temp/src/components/Email.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","FormText","autosize","Email","props","state","textareaHeight","evt","newHeight","Math","max","min","target","scrollHeight","setState","textarea","focus","description","border","handleKeyUp","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,QAAhD,QAAgE,YAAhE;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;;IAGMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE;AADL,KAAb;AAFiB;AAKlB;;;;gCACWC,G,EAAK;AACf;AACA,UAAIC,SAAS,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASJ,GAAG,CAACK,MAAJ,CAAWC,YAAX,GAA0B,CAAnC,EAAsC,EAAtC,CAAT,EAAoD,EAApD,CAAhB;;AACA,UAAIL,SAAS,KAAK,KAAKH,KAAL,CAAWC,cAA7B,EAA6C;AAC3C,aAAKQ,QAAL,CAAc;AACZR,UAAAA,cAAc,EAAEE;AADJ,SAAd;AAGD;AACF;;;wCAEmB;AAClB,WAAKO,QAAL,CAAcC,KAAd;AACAd,MAAAA,QAAQ,CAAC,KAAKa,QAAN,CAAR;AACD;;;6BACQ;AACP,UAAME,WAAW,GAAG;AAClBC,QAAAA,MAAM,EAAE;AADU,OAApB;AAGA,aACE,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,aAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAQc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARd,EASE,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,aAHZ,CAIE;AAJF;AAKE,QAAA,OAAO,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CATF,CADF,CADF;AA+ED;;;;EAxGiBzB,S;;AA2GpB,eAAeQ,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport 'scss/my-scss.scss';\nimport autosize from 'autosize';\n\n\nclass Email extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textareaHeight: 38\n    };\n  }\n  handleKeyUp(evt) {\n    // Max: 75px Min: 38px\n    let newHeight = Math.max(Math.min(evt.target.scrollHeight + 2, 75), 38);\n    if (newHeight !== this.state.textareaHeight) {\n      this.setState({\n        textareaHeight: newHeight\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.textarea.focus();\n    autosize(this.textarea);\n  }\n  render() {\n    const description = {\n      border: 'solid'\n    }\n    return (\n      <>\n        <Form>\n          <FormGroup>\n            <Label>File</Label>\n            <Input\n              type=\"file\"\n              name=\"file\"\n              id=\"exampleFile\"\n            />\n          </FormGroup><br />\n          <FormGroup tag=\"fieldset\">\n            <legend>Description</legend>\n            <Input\n              type=\"textarea\"\n              name=\"text\"\n              className=\"exampleText\"\n              // style={description}\n              onKeyUp={this.handleKeyUp.bind(this)}\n            />\n          </FormGroup>\n        </Form>\n        {/* <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"password placeholder\" />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"exampleSelect\">Select</Label>\n            <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"exampleSelectMulti\">Select Multiple</Label>\n            <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"exampleText\">Text Area</Label>\n            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n          </FormGroup> \n\n\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio1\" />{' '}\n                Option two can be something else and selecting it will deselect option one\n          </Label>\n            </FormGroup>\n            <FormGroup check disabled>\n              <Label check>\n                <Input type=\"radio\" name=\"radio1\" disabled />{' '}\n                Option three is disabled\n          </Label>\n            </FormGroup>\n          </FormGroup>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" />{' '}\n              Check me out\n        </Label>\n          </FormGroup>\n          <Button>Submit</Button>\n        </Form>*/}\n      </>\n    );\n  }\n}\n\nexport default Email;"]},"metadata":{},"sourceType":"module"}